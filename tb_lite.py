#!/usr/bin/env python3


import telebot
import cfg
import utils


bot = telebot.TeleBot(cfg.token)



def restore_message_text(s1: str, l) -> str:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É s1 –∏ —Å–ø–∏—Å–æ–∫ l —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,
    –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É s0 —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º.

    Args:
        s1: –°—Ç—Ä–æ–∫–∞, –∫ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.
        l: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π, –æ–ø–∏—Å—ã–≤–∞—é—â–∏—Ö —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.
        –ö–∞–∂–¥—ã–π —Å–ª–æ–≤–∞—Ä—å —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∏–ø–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (type),
        –Ω–∞—á–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏ (offset), –¥–ª–∏–Ω–µ (length) –∏ —è–∑—ã–∫–µ (language,
        –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ).

    Returns:
        –°—Ç—Ä–æ–∫–∞ s0 —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º.
    """
    s0 = ""
    last_pos = 0
    for i in sorted(l, key=lambda x: x.offset):
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –¥–æ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±–ª–æ–∫–∞
        s0 += s1[last_pos:i.offset]
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º—ã–π —Ç–µ–∫—Å—Ç
        formatted_text = s1[i.offset:i.offset + i.length]

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–æ—Ä–º–∞—Ç
        if i.type == 'bold':
            s0 += f"**{formatted_text}**"
        elif i.type == 'italic':
            s0 += f"__{formatted_text}__"
        elif i.type == 'strikethrough':
            s0 += f"~~{formatted_text}~~"
        elif i.type == 'code':
            s0 += f"`{formatted_text}`"
        elif i.type == 'pre':
            if i.language:
                s0 += f"```{i.language}\n{formatted_text}\n```"
            else:
                s0 += f"```\n{formatted_text}\n```"

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø–æ–∑–∏—Ü–∏–∏
        last_pos = i.offset + i.length

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–π—Å—è —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    s0 += s1[last_pos:]
    return s0


@bot.message_handler()
# @bot.message_handler(commands=['start'])
def command_code(message: telebot.types.Message):
    t = r"""
‚ú® **–í–µ—á–µ—Ä –∏–≥—Ä —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏!** ‚ú®

–°–µ–≥–æ–¥–Ω—è –≤–µ—á–µ—Ä–æ–º –Ω–∞ –Ω–∞—à–µ–º —É—á–∞—Å—Ç–∫–µ  —Ü–∞—Ä–∏–ª–∞  –æ—Å–æ–±–µ–Ω–Ω–∞—è  –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞!  –ú—ã  —Å  —Ä–µ–±—è—Ç–∞–º–∏  –∏  –∏—Ö  —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏  –ø–µ—Ä–µ–Ω–µ—Å–ª–∏—Å—å  –≤  –¥–µ—Ç—Å—Ç–≤–æ  –º–∞–º  –∏  –ø–∞–ø  –∏  —Å—ã–≥—Ä–∞–ª–∏  –≤  –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—É—é  –∏–≥—Ä—É  "***–ú—ã –Ω–µ–º–Ω–æ–∂–∫–æ –ø–æ—Ä–µ–∑–≤–∏–ª–∏—Å—å, –ø–æ –º–µ—Å—Ç–∞–º –≤—Å–µ —Ä–∞–∑–º–µ—Å—Ç–∏–ª–∏—Å—å. –¢—ã –∑–∞–≥–∞–¥–∫—É –æ—Ç–≥–∞–¥–∞–π, –∫—Ç–æ –ø–æ–∑–≤–∞–ª —Ç–µ–±—è, —É–∑–Ω–∞–π!***" üòä

–î–µ—Ç–∏  —Å  –∑–∞–¥–æ—Ä–æ–º  –±–µ–≥–∞–ª–∏,  –ø—Ä—è—Ç–∞–ª–∏—Å—å  –∏  –æ—Ç–≥–∞–¥—ã–≤–∞–ª–∏,  –∫—Ç–æ  –∂–µ  –∏—Ö  –ø–æ–∑–≤–∞–ª.  –†–æ–¥–∏—Ç–µ–ª–∏  —Ç–æ–∂–µ  –Ω–µ  –æ—Ç—Å—Ç–∞–≤–∞–ª–∏  –∏  —Å  —É–ª—ã–±–∫–∞–º–∏  –≤—Å–ø–æ–º–∏–Ω–∞–ª–∏  —Å–≤–æ—ë  –¥–µ—Ç—Å—Ç–≤–æ!  üòÑ

–ö–∞–∫  –∂–µ  –∑–¥–æ—Ä–æ–≤–æ  –ø—Ä–æ–≤–æ–¥–∏—Ç—å  –≤—Ä–µ–º—è  –≤–º–µ—Å—Ç–µ,  –∏–≥—Ä–∞—Ç—å  –∏  –≤–µ—Å–µ–ª–∏—Ç—å—Å—è!  –¢–∞–∫–∏–µ  –º–æ–º–µ–Ω—Ç—ã  –æ–±—ä–µ–¥–∏–Ω—è—é—Ç  –Ω–∞—Å  –∏  –¥–∞—Ä—è—Ç  –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ  —ç–º–æ—Ü–∏–∏! ‚ù§Ô∏è

#–¥–µ—Ç—Å–∫–∏–π—Å–∞–¥ #–∏–≥—Ä—ã—Å—Ä–æ–¥–∏—Ç–µ–ª—è–º–∏ #–≤–µ—á–µ—Ä–Ω–∏–µ–∏–≥—Ä—ã #–¥–µ—Ç—Å—Ç–≤–æ #—Ä–æ–¥–∏—Ç–µ–ª–∏ #–¥–µ—Ç–∏ #–≤–µ—Å–µ–ª—å–µ #–≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è #—Å–µ–º–µ–π–Ω—ã–π–≤–µ—á–µ—Ä
"""


    t = utils.bot_markdown_to_html(t)
    bot.reply_to(message, t, parse_mode = 'HTML')
    # tt = utils.bot_markdown_to_html(t)
    # print(len(tt))
    # print(tt)
    # for ttt in utils.split_html(tt, 3800):
    #     print(ttt)
    #     bot.reply_to(message, ttt, parse_mode = 'HTML')

    # url = 'https://youtu.be/zB7DVYSltGM?si=ldHqem6B4FfW1nEN'
    # kbd  = telebot.types.InlineKeyboardMarkup()
    # button1 = telebot.types.InlineKeyboardButton('—Å—Å—ã–ª–∫–∞', url=url)
    # kbd.add(button1)
    # video = telebot.types.InputMediaVideo(url)
    # bot.send_video(chat_id=message.chat.id,
    #                caption = 'caption',
    #                video = video,
    #                reply_markup = kbd)

    # print(restore_message_text(message.text, message.entities))



if __name__ == '__main__':
    bot.polling()
